// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace EscapeRoomPlanner.Data.EntityFramework.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    internal partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation(annotation: "ProductVersion", value: "2.2.0-rtm-35687")
                .HasAnnotation(annotation: "Relational:MaxIdentifierLength", value: 128)
                .HasAnnotation(annotation: "SqlServer:ValueGenerationStrategy",
                    value: SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity(name: "EscapeRoomPlanner.Data.EntityFramework.Models.Customer", buildAction: b =>
            {
                b.Property<int>(propertyName: "Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation(annotation: "SqlServer:ValueGenerationStrategy",
                        value: SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>(propertyName: "Email");

                b.Property<string>(propertyName: "FirstName")
                    .IsRequired()
                    .HasMaxLength(255);

                b.Property<string>(propertyName: "PhoneNumber")
                    .IsRequired();

                b.Property<string>(propertyName: "SecondName")
                    .IsRequired()
                    .HasMaxLength(255);

                b.HasKey("Id");

                b.ToTable(name: "Customer");
            });

            modelBuilder.Entity(name: "EscapeRoomPlanner.Data.EntityFramework.Models.Reservation", buildAction: b =>
            {
                b.Property<int>(propertyName: "Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation(annotation: "SqlServer:ValueGenerationStrategy",
                        value: SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<int>(propertyName: "CustomerId");

                b.Property<DateTime>(propertyName: "DateReservation");

                b.Property<string>(propertyName: "Description");

                b.Property<string>(propertyName: "PhoneNumber");

                b.Property<int>(propertyName: "RoomId");

                b.HasKey("Id");

                b.HasIndex("CustomerId");

                b.HasIndex("RoomId");

                b.ToTable(name: "Reservation");
            });

            modelBuilder.Entity(name: "EscapeRoomPlanner.Data.EntityFramework.Models.Room", buildAction: b =>
            {
                b.Property<int>(propertyName: "Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation(annotation: "SqlServer:ValueGenerationStrategy",
                        value: SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<int>(propertyName: "ClosingTime");

                b.Property<string>(propertyName: "Description")
                    .IsRequired()
                    .HasMaxLength(1000);

                b.Property<string>(propertyName: "Name")
                    .IsRequired()
                    .HasMaxLength(255);

                b.Property<int>(propertyName: "OpeningTime");

                b.HasKey("Id");

                b.ToTable(name: "Room");
            });

            modelBuilder.Entity(name: "EscapeRoomPlanner.Data.EntityFramework.Models.Reservation", buildAction: b =>
            {
                b.HasOne(relatedTypeName: "EscapeRoomPlanner.Data.EntityFramework.Models.Customer")
                    .WithMany(collection: "Reservations")
                    .HasForeignKey("CustomerId")
                    .OnDelete(DeleteBehavior.Cascade);

                b.HasOne(relatedTypeName: "EscapeRoomPlanner.Data.EntityFramework.Models.Room")
                    .WithMany(collection: "Reservations")
                    .HasForeignKey("RoomId")
                    .OnDelete(DeleteBehavior.Cascade);
            });
#pragma warning restore 612, 618
        }
    }
}